---
default_locale: en
locales:
  $ref: locales.yml
name: "Weather application with DevOps Insights"
description: "With this cloud-native toolchain, you can build a simple Node.js weather application. The toolchain builds from a GitHub repository, runs unit tests by using Mocha, checks code coverage by using Istanbul, requests decisions from DevOps Insights, and then deploys to Bluemix.\n\nTo get started, click **Create**."
version: 0.1
image: data:image/png;base64,$file(dra-toolchain.png,base64)
required:
 - deploy
 - github

# Github repos
demodra-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.demodra-repo_name}}"
    repo_url: "{{github.parameters.demodra-repo_url}}"
    type: clone
    has_issues: false
  hidden: [form, description]

# Pipelines
demodra-build:
  service_id: pipeline
  parameters:
    name: "{{name}}"
    configuration:
      content: $file(demodra.pipeline.yml)
      env:
        DEMODRA_API_REPO: "demodra-repo"
        CF_APP_NAME: "{{deploy.parameters.demodra-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
      execute: true
    services: ["demodra-repo"]
  hidden: [form, description]

#DevOps Insights
dra:
  service_id: draservicebroker
  include: dra.yml


#Web IDE
webide:
  service_id: orion

#Deployment
deploy:
  schema:
    $ref: deploy.json
  service-category: pipeline
  parameters:
    dev-space: dev
    qa-space: qa
    prod-space: prod
    demodra-app-name: "{{demodra-repo.parameters.repo_name}}"

#Github
github:
  schema:
    $ref: github.json
  service-category: githubpublic
  parameters:
    demodra-repo_name: "{{name}}"
    demodra-repo_url: https://github.com/open-toolchain/DemoDRA
